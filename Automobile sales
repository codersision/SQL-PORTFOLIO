select * from projects.dbo.sales_data

--checking unique values
select distinct status from projects.dbo.sales_data;
select distinct productline from projects.dbo.sales_data;
select distinct year_id from projects.dbo.sales_data;
select distinct territory from projects.dbo.sales_data;
select distinct dealsize from projects.dbo.sales_data;
select distinct country from projects.dbo.sales_data;

--ANALYSIS
-- which product sells the most
select distinct productline, sum(sales) as totalsales from projects.dbo.sales_data
group by productline
order by totalsales desc;

-- which product sells the most every year
select distinct productline, sum(sales) as totalsales from projects.dbo.sales_data
where year_id=2003
group by productline
order by totalsales desc;

select distinct productline, sum(sales) as totalsales from projects.dbo.sales_data
where year_id=2004
group by productline
order by totalsales desc;

select productline, sum(sales) as totalsales from projects.dbo.sales_data
where year_id=2005
group by productline
order by totalsales desc;

--the year with the highest sales score
select year_id, sum(sales) as totalsales from projects.dbo.sales_data
group by year_id
order by totalsales desc;

--when was the highest sales made in 2004
select distinct month_id, sum(sales) as totalsales, count(ordernumber) frequency from projects.dbo.sales_data
where year_id=2004
group by month_id
order by totalsales desc;

--since most of the sales were made in November, what was sold most in that month
select productline, sum(sales) as totalsales,  count(ordernumber) frequency  from projects.dbo.sales_data
where year_id=2004 and month_id=11
group by productline
order by totalsales desc;

--if classic cars was sold most then what dealsize sold most
select dealsize, sum(sales) as totalsales from projects.dbo.sales_data
where year_id=2004 and month_id=11 and productline like '%classic cars%'
group by dealsize
order by totalsales desc; --if the company wants to increase sales they can sell more of medium deal sized classic cars or any medium sized sized products(including running attractive offers in that category) or if they want to increase sales in other deal sizes then they can put in strategies to help increase that 

--the most bought product from the company
select productline, sum(sales) as totalsales from projects.dbo.sales_data
group by productline
order by totalsales desc;

--the dealsize with the highest number of sales
select dealsize, sum(sales) as totalsales from projects.dbo.sales_data
group by dealsize
order by totalsales desc;

--country with the highest sales score
select country, productline, sum(sales) as totalsales from projects.dbo.sales_data
where year_id=2003 and month_id=11 and productline like '%classic cars%'
group by country, productline
order by totalsales desc;

--who is the best customer;
DROP TABLE IF EXISTS #rfm
;with rfm as 
(
	select 
		CUSTOMERNAME, 
		sum(sales) MonetaryValue,
		avg(sales) AvgMonetaryValue,
		count(ORDERNUMBER) Frequency,
		max(ORDERDATE) last_order_date,
		(select max(ORDERDATE) from projects.dbo.sales_data) max_order_date,
		DATEDIFF(DD, max(ORDERDATE), (select max(ORDERDATE) from projects.dbo.sales_data)) Recency
	from projects.dbo.sales_data
	group by CUSTOMERNAME
),
rfm_calc as
(

	select r.*,
		NTILE(4) OVER (order by Recency desc) rfm_recency,
		NTILE(4) OVER (order by Frequency) rfm_frequency,
		NTILE(4) OVER (order by MonetaryValue) rfm_monetary
	from rfm r
)
select 
	c.*, rfm_recency+ rfm_frequency+ rfm_monetary as rfm_cell,
	cast(rfm_recency as varchar) + cast(rfm_frequency as varchar) + cast(rfm_monetary  as varchar)rfm_cell_string
into #rfm
from rfm_calc c

select CUSTOMERNAME , rfm_recency, rfm_frequency, rfm_monetary,
	case 
		when rfm_cell_string in (111, 112 , 121, 122, 123, 132, 211, 212, 114, 141) then 'lost_customers'  --lost customers
		when rfm_cell_string in (133, 134, 143, 244, 334, 343, 344, 144) then 'slipping away, cannot lose' -- (Big spenders who havenâ€™t purchased lately) slipping away
		when rfm_cell_string in (311, 411, 331) then 'new customers'
		when rfm_cell_string in (222, 223, 233, 322) then 'potential churners'
		when rfm_cell_string in (323, 333,321, 422, 332, 432) then 'active' --(Customers who buy often & recently, but at low price points)
		when rfm_cell_string in (433, 434, 443, 444) then 'loyal'
	end rfm_segment

from #rfm
